namespace Hydna.Net
{

    using System;

    using NUnit.Framework;

    using Hydna.Net;

    [TestFixture]
    public class ChannelOpenTest : BaseTest
    {
        Channel open;
        Channel deny;

        [Test]
        public void TestWithMessage()
        {
            Timeout(5000);

            open = CreateChannel("test-token?TOKEN", ChannelMode.ReadWrite);

            Wait();
        }

        [Test]
        public void TestWithDeny()
        {
            Timeout(5000);

            deny = CreateChannel("open-deny", ChannelMode.ReadWrite);

            Wait();
        }

        protected override void Open(Channel channel, ChannelEventArgs e)
        {
            Assert.AreEqual(channel, open);
			Assert.AreEqual(e.Text, "TOKEN");
            channel.Close();
        }

        protected override void Closed(Channel channel, ChannelCloseEventArgs e)
        {
            if (channel == deny) {
                Assert.IsTrue(e.WasDenied);
                Assert.IsFalse(e.WasClean);
    			Assert.AreEqual(e.Text, "DENIED");
            }
            else {
                Assert.IsTrue(e.WasClean);
                Assert.IsFalse(e.WasDenied);
            }
            
            Done();
        }

    }
}


